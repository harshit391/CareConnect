// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String?        @unique
  name          String
  password      String
  phone         String         @unique
  role          UserRole       @default(PATIENT)
  currLocation  Location       @relation(fields: [locationId], references: [id])
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  appointments  Appointment[]
  prescriptions Prescription[]
  reports       Report[]
  ratings       Ratings[]
  locationId    String
}

model Hospital {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String
  password      String
  parentId      String?
  parent        Hospital?      @relation("HospitalSelfRelation", fields: [parentId], references: [id])
  children      Hospital[]     @relation("HospitalSelfRelation")
  specialities  Speciality[]   @relation("HospitalSpecialities")
  phone         String         @unique
  documents     String[]
  currLocation  Location       @relation(fields: [locationId], references: [id], onDelete: Cascade)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  timings       Timing[]       @relation("Timings")
  appointments  Appointment[]
  prescriptions Prescription[]
  reports       Report[]
  ratings       Ratings[]
  locationId    String
  fees          Int
}

model Speciality {
  id          String     @id @default(cuid())
  name        String
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  hospitals   Hospital[] @relation("HospitalSpecialities")
}

enum UserRole {
  PATIENT
  ADMIN
}

model Location {
  id        String     @id @default(cuid())
  longitude Decimal
  latitude  Decimal
  Hospital  Hospital[]
  User      User[]
}

model Timing {
  id         String   @id @default(cuid())
  hospitalId String
  day        String
  startTime  String
  endTime    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Hospital   Hospital @relation("Timings", fields: [hospitalId], references: [id])
}

model Appointment {
  id         String   @id @default(cuid())
  hospitalId String
  userId     String
  date       DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Hospital   Hospital @relation(fields: [hospitalId], references: [id])
  User       User     @relation(fields: [userId], references: [id])
}

model Prescription {
  id            String   @id @default(cuid())
  appointmentId String
  userId        String
  hospitalId    String
  prescription  String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Hospital      Hospital @relation(fields: [hospitalId], references: [id])
  User          User     @relation(fields: [userId], references: [id])
}

model Report {
  id            String   @id @default(cuid())
  appointmentId String
  userId        String
  hospitalId    String
  report        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Hospital      Hospital @relation(fields: [hospitalId], references: [id])
  User          User     @relation(fields: [userId], references: [id])
}

model Ratings {
  id         String   @id @default(cuid())
  hospitalId String
  userId     String
  rating     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Hospital   Hospital @relation(fields: [hospitalId], references: [id])
  User       User     @relation(fields: [userId], references: [id])
}

model Feedback {
  id        String   @id @default(cuid())
  name      String
  phone     String
  email     String
  message   String
  createdAt DateTime @default(now())
}
